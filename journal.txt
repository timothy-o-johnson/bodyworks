::2022-11-16::
continue to refactor. all tests are passing. the Cell code has been separated from theBody and imported. it's a bit cleaner--- i think. haven't had time to really look.  30 min timer is up!


::2022-11-15::
begin refactoring: separate the generalized cell class from the body class

a bit messy now but feeling good about where we are headedc

::2022-11-12::
pass integrated tests! 
next time: begin refactoring

::2022-11-11::
begin working on integratedd test for cellDivisionMitosis()

progress! :)

::2022-11-10::
enterProphase() handles the creation of chomosomes differently depending on whether the cell is new or not

::2022-11-09::
again going to need some refactoring
and it's going to require me to revisit how i'm adding chromosomes in the first step
but i'm pretty enthused that we may have made it through the entire process!!

::2022-11-07::
annoying how nucleus isn't really mentioned as part of the cell... from what I can tell and but then it's included as in the phases of mitosis

long story short, i haven't/am not sure if i have modeled the reconstitution of the nucleus...

we are going to convert the chromosomes into a string to capture the notion of being "dispersed". because we think it's important to keep the data in the cell even if just in another format

o model the reconstitution of nucleus

::2022-11-05::
hm... except for the centrioles and chromosomes, not feeling great about how qualitatively the organelles are being handled.

like all other parts of this project: could use some refactoring
would be nice talk to some computer science person to consider whether it's better to have cell properties exist on a cell at creation whether or not they exist rather than add them

it makes it more complicated to add delete them at various stages, but then again... it probably speaks to the purpose/philosophy of a model

i'm thinking i could use Netsuite/Oracle records as a model and assume they are applying best practices-- unless they aren't and are beholden to a decision they made long along

looking forward to warpping up enterTelophase() soon and doing an integrated test and some refactoring

::2022-11-03::
handled the chromosomes pretty well
debating on weather to handle centrioles as carefully
also debating on whether to delete the orignal cell, since it no longer exists an entity

::2022-11-01::
suspecting that a major takeaway in modeling nature is that it may be better to create all the properties will ever be known to have rather than to add or delete them as would happen in the real world.

it makes setting properties easy later if the property is already part of the class

::2022-10-25::
moved daughter chromosomes to respective poles, needs refactor
not sure we modeled this accurately-- what does it mean to move to respective poles exactly?

also, can we give a big 'holy shit!' in the name of testing?!
lord, what a mess this would be without that. yiiikes.

::2022-10-23::
started Anaphase

still need to... 
o clean code all is one place is a bit messy...


::2022-10-22::
finished modeling metaphase -- with proper chromosome count
code is still big and messy
looking forward to cleaning up and being able to see intricacies of cell visually

::2022-10-20::
learned how to use the reduce method
prepped 

::2022-10-15::
oy! today i handled the 'paired' description of centrioles
took some research learned what S phase was and how they split
https://en.wikipedia.org/wiki/Centrosome_cycle

understanding how objects worked helped in creating daughter centrioles
o should i add centrosome?

next time: 3.iii.D

::2022-10-14::
X didn't handle the 'paired' aspect of metaphase test (iii.B)

also dont't really discuss/model the mechanism by which these are paired; without the logic; how do we know how it breaks?

discovered a way to take a picture of a page an then import that text so we don't need to have the book with us to do the model; just snap a picture and export the text

took 1... 1.5 hours to write test 3.c.iii.C--- oh my loooooord

part of the problem here is writing code that based off of the way the process is percieved. if a programmer were interpresting the body they might see it different. that's to say, the raw data that we are given (the text and the images) has itself been scrubbed and organized in a way that necessarily impact the way we model-- which will make coming up with a new/novel way to model challenging

::2022-10-13::
not particularly pleased with how we handled today's test but we are glad that we did something.
don't like that it's descriptive rather than quantitative


::2022-10-09::
thinking we should go back to coloring this stuff rather than coding it-- oy

finished enterProphase. 
o didn't really model the location of centromeres in cellAfterProphase
o inconsistent handling of counts (sometimes an organelle has a count property, sometimes the property is the count)
o not sure how to model this: 'D. each chromatid should have the equivalent amount of DNA of a chromosome'
-- learned that centromere is a region on a chromatid where the kinetochores assemble 

::2022-10-08::
did much research into how javascript handles objects in the context of passing, copying, and comparison

::2022-10-07::
it took us 30 min 
ðŸ˜…
but we have ensured that in the prophase of mitosis,  each chromosome is composed of two chromatids connected by a centromere.

*** notes / thoughts ***
o it's clear we are going to have to organize this code better
o didn't really 'connect' the two chromatids so much as recognize that they must exist in proportion to each other
- debating how helpful/readible this line is
'let chromosomes = (cellAfterProphase.organelles.chromosomes = [])'  
the goal is to quickly and simply work with chromosomes property, but perhaps two lines may be better.  
- a little concerned about pass by value vs pass by reference may come back to bite us
- after we model mitosis to our satisfaction, we are open to the idea that this project is beyond our resources and may look to join a team that's already 
- and finally if anyone has any suggestions, please share!